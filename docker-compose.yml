version: "3.9"

services:
  mssql-server:
    container_name: mssql
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: always
    env_file: ./.env
    ports:
      - "${SQLSERVER_LOCAL_PORT}:${SQLSERVER_DOCKER_PORT}"
    environment:
      - SA_PASSWORD=${SQLSERVER_SA_PASSWORD}
      - ACCEPT_EULA=Y
    volumes:
      - sqlserver-data:/var/opt/mssql
      - ./db.init.sql:/docker-entrypoint-initdb.d/db.init.sql
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    entrypoint: /docker-entrypoint-initdb.d/init-db.sh
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${SQLSERVER_SA_PASSWORD} -Q 'SELECT 1'"]
      interval: 10s
      timeout: 10s
      retries: 5

  api-service:
    container_name: api-service
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "${SPRING_LOCAL_PORT}:${SPRING_DOCKER_PORT}"
    restart: always
    env_file: ./.env
    depends_on:
      mssql-server:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_JSON: '{
              "spring.datasource.url"  : "jdbc:sqlserver://mssql-server:${SQLSERVER_DOCKER_PORT};databaseName=${SQLSERVER_DATABASE}",
              "spring.datasource.username" : "sa",
              "spring.datasource.password" : "${SQLSERVER_SA_PASSWORD}",
              "spring.jpa.hibernate.ddl-auto" : "update",
              "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.SQLServerDialect"
            }'
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true
    networks:
      - backend

volumes:
  sqlserver-data:

networks:
  backend:
    driver: bridge